set nocompatible
filetype off

" set the runtime path to include Vundle and initialize
set rtp+=$DOTFILES/vim/bundle/Vundle.vim

let mapleader=","

" Syntax Highlighting
try
  " Badwolf won't be installed when vundle is downloading plugins
  colorscheme badwolf
catch /^Vim\%((\a\+)\)\=:E185/
  " deal with it
endtry

syntax enable

" Start Nerdtree if no other file is open
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

" Sync open file with Nerdtree
function! IsNERDTreeOpen()
  return exists("t:NERDTreeBufName") && (bufwinnr(t:NERDTreeBufName) != -1)
endfunction

function! SyncTree()
  if &modifiable && IsNERDTreeOpen() && strlen(expand('%')) > 0 && !&diff
    NERDTreeFind
    wincmd p
  endif
endfunction

" Highlight Currently open buffer in NERDTree
autocmd BufEnter * call SyncTree()

nnoremap <C-n> :NERDTreeToggle<Return>

" NerdCommentor
filetype plugin on

let g:NERDSpaceDelims = 1
let g:NERDCommentEmptyLines = 1

" C-_ means Control + / for some reason
vmap <C-_> <plug>NERDCommenterToggle
nmap <C-_> <plug>NERDCommenterToggle

" GitGutter
let g:gitgutter_map_keys = 0
let g:gitgutter_preview_win_floating = 1
let g:gitgutter_highlight_linenrs = 1

let g:gitgutter_sign_modified_removed   = '±'

nmap <leader>hp <plug>(GitGutterPreviewHunk)
nmap <leader>hs <plug>(GitGutterStageHunk)
nmap <leader>hu <plug>(GitGutterUndoHunk)

nmap [c <plug>(GitGutterPrevHunk)
nmap ]c <plug>(GitGutterNextHunk)

nmap <leader>hf :GitGutterFold<CR>

highlight GitGutterAdd    guifg=#009900 ctermfg=2
highlight GitGutterChange guifg=#bbbb00 ctermfg=3
highlight GitGutterDelete guifg=#ff2222 ctermfg=1

" Nerdtree Git Plugin
let g:NERDTreeIndicatorMapCustom = {
  \ "Modified"  : "~",
  \ "Staged"    : "+",
  \ "Untracked" : "*",
  \ "Renamed"   : "→",
  \ "Unmerged"  : "=",
  \ "Deleted"   : "X",
  \ "Dirty"     : "≈",
  \ "Clean"     : "√",
  \ 'Ignored'   : '≡',
  \ "Unknown"   : "?"
  \ }

" ctrlp
let g:ctrlp_user_command = ['.git/', 'git --git-dir=%s/.git ls-files -oc --exclude-standard']

" Enable vim auto settings on the first/last line see :help auto-setting
set modeline

" Tab Settings
set smarttab
set cindent
set tabstop=2 " The tab character is this many spaces
set softtabstop=2 " When pressing the tab, insert this many spaces (if using tabs, )
set shiftwidth=0 " Set the shift width to whatever softtabstop is
set expandtab

" Window Splitting
nnoremap \| <C-w>v
nnoremap _ <C-w>s
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l
nnoremap <S-h> <C-w>>
nnoremap <S-j> <C-w>-
nnoremap <S-k> <C-w>+
nnoremap <S-l> <C-w><

" UI Config
set number
nnoremap <C-c> :set invnumber<CR>
set showcmd
set cursorline
filetype indent on
set wildmenu
set lazyredraw
set showmatch

" Searching
set incsearch
set hlsearch
nnoremap <leader><space> :nohlsearch<CR>

"Folding
set foldenable
set foldlevelstart=10
set foldnestmax=10
nnoremap <space> za
set foldmethod=indent

"Movement
"move vertically by visual line
nnoremap j gj
nnoremap k gk
"Move the the beginning/end of line
nnoremap B ^
nnoremap E $
nnoremap $ <nop>
nnoremap ^ <nop>
" highlight last inserted text
nnoremap gV `[v`]

" Tab mappings
nnoremap <leader>1 :set shiftwidth=1<CR>
nnoremap <leader>2 :set shiftwidth=2<CR>
nnoremap <leader>3 :set shiftwidth=3<CR>
nnoremap <leader>4 :set shiftwidth=4<CR>
nnoremap <leader>5 :set shiftwidth=5<CR>
nnoremap <leader>6 :set shiftwidth=6<CR>
nnoremap <leader>7 :set shiftwidth=7<CR>
nnoremap <leader>8 :set shiftwidth=8<CR>
nnoremap <leader>9 :set shiftwidth=9<CR>


call vundle#rc("$DOTFILES/vim/bundle")
call vundle#begin()

" Plugins
Plugin 'VundleVim/Vundle.vim'
Plugin 'ctrlpvim/ctrlp.vim' " fuzzy find files
Plugin 'scrooloose/nerdtree' " file drawer, open with :NERDTreeToggle
Plugin 'Xuyuanp/nerdtree-git-plugin' " Git status in nerdtree
Plugin 'scrooloose/nerdcommenter' " Comment lines
Plugin 'tpope/vim-fugitive' " the ultimate git helper
Plugin 'sjl/badwolf' " Colorscheme
Plugin 'airblade/vim-gitgutter' " Git changes

source "$DOTFILES/config/vimrc.vim"
source "$HOME/.config/dotconfig/vimrc.vim"

call vundle#end()
